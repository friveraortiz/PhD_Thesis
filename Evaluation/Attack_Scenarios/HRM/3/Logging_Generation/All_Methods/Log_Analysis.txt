Methods:

1.- call(boolean controller.UserController.validateUser(..))|| => 1 Ocurrence    call(boolean model.UserDatabase.validateUser(..))|| => 1 Ocurrence    call(model.UserLevel controller.UserController.getUserLevel(..))|| => 1 Ocurrence    call(model.UserLevel model.UserDatabase.getUserLevel(..))|| => 1 Ocurrence2.- call(void controller.ModuleController.saveModules(..))|| => 7 Ocurrences    call(void model.ModuleDatabase.saveModules(..))|| =>7 Ocurrences    call(java.lang.String[] controller.ModuleController.getModules(..))|| =>7 Ocurrences    call(java.lang.String[] model.ModuleDatabase.getModules(..))|| =>7 Ocurrences    call(java.lang.String[][] controller.ModuleController.getSubModules(..))|| =>7 Ocurrences    call(java.lang.String[][] model.ModuleDatabase.getSubModules(..))|| =>7 Ocurrences3.- call(ArrayList<model.Employee> controller.EmployeeController.loadSupervisors(..))|| =>22 Ocurrences    call(ArrayList<model.Employee> model.EmployeeDatabase.loadSupervisors(..))|| =>22 Ocurrences    call(int controller.EmployeeController.maxNumEmployee(..))|| =>22 Ocurrences    call(int model.EmployeeDatabase.maxNumEmployee(..))|| =>22 Ocurrences4.- call(void controller.EmployeeController.load(..))|| =>7 Ocurrences    call(void model.EmployeeDatabase.load(..))|| =>7 Ocurrences5.- call(boolean controller.EmployeeController.validateDeleteEmployee1(..))|| =>5 Ocurrences    call(boolean model.EmployeeDatabase.validateDeleteEmployee1(..))|| =>5 Ocurrences    call(boolean controller.EmployeeController.validateDeleteEmployee2(..))||  =>5 Ocurrences   call(boolean model.EmployeeDatabase.validateDeleteEmployee2(..))|| =>5 Ocurrences6.- call(void controller.EmployeeController.delete(..))|| =>2 Ocurrences     call(void model.EmployeeDatabase.delete(..)); =>2 Ocurrences

Annotations:
Method,1,controller.UserController.validateUser,controller.UserController,validateUser,Method = controller.UserController.validateUser,Method,=,controller.UserController.validateUser;
Method,2,model.UserDatabase.validateUser,model.UserDatabase,validateUser,Method = model.UserDatabase.validateUser,Method,=,model.UserDatabase.validateUser;
Method,3,controller.UserController.getUserLevel,controller.UserController,getUserLevel,Method = controller.UserController.getUserLevel,Method,=,controller.UserController.getUserLevel;
Method,4,model.UserDatabase.getUserLevel,model.UserDatabase,getUserLevel,Method = model.UserDatabase.getUserLevel,Method,=,model.UserDatabase.getUserLevel;
Method,5,controller.ModuleController.saveModules,controller.ModuleController,saveModules,Method = controller.ModuleController.saveModules,Method,=,controller.ModuleController.saveModules;
Method,6,model.ModuleDatabase.saveModules,model.ModuleDatabase,saveModules,Method = model.ModuleDatabase.saveModules,Method,=,model.ModuleDatabase.saveModules;
Method,7,controller.ModuleController.getModules,controller.ModuleController,getModules,Method = controller.ModuleController.getModules,Method,=,controller.ModuleController.getModules;
Method,8,model.ModuleDatabase.getModules,model.ModuleDatabase,getModules,Method = model.ModuleDatabase.getModules,Method,=,model.ModuleDatabase.getModules;
Method,9,controller.ModuleController.getSubModules,controller.ModuleController,getSubModules,Method = controller.ModuleController.getSubModules,Method,=,controller.ModuleController.getSubModules;
Method,10,model.ModuleDatabase.getSubModules,model.ModuleDatabase,getSubModules,Method = model.ModuleDatabase.getSubModules,Method,=,model.ModuleDatabase.getSubModules;
Method,11,controller.EmployeeController.loadSupervisors,controller.EmployeeController,loadSupervisors,Method = controller.EmployeeController.loadSupervisors,Method,=,controller.EmployeeController.loadSupervisors;
Method,12,model.EmployeeDatabase.loadSupervisors,model.EmployeeDatabase,loadSupervisors,Method = model.EmployeeDatabase.loadSupervisors,Method,=,model.EmployeeDatabase.loadSupervisors;
Method,13,controller.EmployeeController.maxNumEmployee,controller.EmployeeController,maxNumEmployee,Method = controller.EmployeeController.maxNumEmployee,Method,=,controller.EmployeeController.maxNumEmployee;
Method,14,model.EmployeeDatabase.maxNumEmployee,model.EmployeeDatabase,maxNumEmployee,Method = model.EmployeeDatabase.maxNumEmployee,Method,=,model.EmployeeDatabase.maxNumEmployee;
Method,15,controller.EmployeeController.load,controller.EmployeeController,load,Method = controller.EmployeeController.load,Method,=,controller.EmployeeController.load;
Method,16,model.EmployeeDatabase.load,model.EmployeeDatabase,load,Method = model.EmployeeDatabase.load,Method,=,model.EmployeeDatabase.load;
Method,17,controller.EmployeeController.validateDeleteEmployee1,controller.EmployeeController,validateDeleteEmployee1,Method = controller.EmployeeController.validateDeleteEmployee1,Method,=,controller.EmployeeController.validateDeleteEmployee1;
Method,18,model.EmployeeDatabase.validateDeleteEmployee1,model.EmployeeDatabase,validateDeleteEmployee1,Method = model.EmployeeDatabase.validateDeleteEmployee1,Method,=,model.EmployeeDatabase.validateDeleteEmployee1;
Method,19,controller.EmployeeController.validateDeleteEmployee2,controller.EmployeeController,validateDeleteEmployee2,Method = controller.EmployeeController.validateDeleteEmployee2,Method,=,controller.EmployeeController.validateDeleteEmployee2;
Method,20,model.EmployeeDatabase.validateDeleteEmployee2,model.EmployeeDatabase,validateDeleteEmployee2,Method = model.EmployeeDatabase.validateDeleteEmployee2,Method,=,model.EmployeeDatabase.validateDeleteEmployee2;
Method,21,controller.EmployeeController.delete,controller.EmployeeController,delete,Method = controller.EmployeeController.delete,Method,=,controller.EmployeeController.delete;
Method,22,model.EmployeeDatabase.delete,model.EmployeeDatabase,delete,Method = model.EmployeeDatabase.delete,Method,=,model.EmployeeDatabase.delete;
1.- The controller.UserController.validateUser and model.UserDatabase.validateUser methods are included in the security log 1 time. This time corresponds when during the attack scenario the System Administrator connected to the HRM software system. The controller.UserController.getUserLevel and model.UserDatabase.getUserLevel are included in the security log 1 time.This time corresponds when during the attack scenario Henry with an the Admin role connected to the HRM software system. 2.- The controller.ModuleController.saveModules, model.ModuleDatabase.saveModules, controller.ModuleController.getModules, model.ModuleDatabase.getModules, controller.ModuleController.getSubModules, model.ModuleDatabase.getSubModules methods are included in the security log 7 times. These times corresponds, when the System Administrator accessed to the main screen in the HRM called: “Human Resources Management System Menu”. In this moment, the HRM software system generated the modules and submodules that a User in the HRM could accessed and displayed them.3.- The controller.EmployeeController.loadSupervisors, model.EmployeeDatabase.loadSupervisors, controller.EmployeeController.maxNumEmployee and model.EmployeeDatabase.maxNumEmployee are included in the security log 22 times. These times corresponds when the HRM software system generated the Supervisor information combobox in the Employees Main Menu HRM.4.- The controller.EmployeeController.load and model.EmployeeDatabase.load are included in the security log 7 times. These times corresponds when the HRM software system generated the Employees Main Menu HRM and it was displayed the list of the current Employees in the HRM software system.5.- The controller.EmployeeController.validateDeleteEmployee1, model.EmployeeDatabase.validateDeleteEmployee1, controller.EmployeeController.validateDeleteEmployee2, model.EmployeeDatabase.validateDeleteEmployee2 methods are included in the security log 5 times.These times corresponds when during the attack scenario, the System Administrator tried to eliminate an Employee and these methods validated if it was possible to eliminate this Employee depending on if such employee had associated Travel Request in the HRM software system.6.- The controller.EmployeeController.delete and model.EmployeeDatabase.delete methods are included in the security log 2 times. These times corresponds when during the attack scenario an employee with a job Title equal to Accountant was removed or an employee with a job Title equal to Historian was removed.